#!/usr/bin/env node

const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

const supabase = createClient(
  process.env.SUPABASE_URL,
  process.env.SUPABASE_SERVICE_ROLE_KEY
);

async function fixVenueNames() {
  console.log('üîß Adding venue name variations...');
  
  // Íµ≠Î¶ΩÌòÑÎåÄÎØ∏Ïà†Í¥Ä Î≥ÄÌòïÎì§ Ï∂îÍ∞Ä
  const venueVariations = [
    {
      name: 'Íµ≠Î¶ΩÌòÑÎåÄÎØ∏Ïà†Í¥Ä',
      name_en: 'MMCA',
      type: 'museum',
      tier: '1',
      address: 'ÏÑúÏö∏ÌäπÎ≥ÑÏãú Ï¢ÖÎ°úÍµ¨ ÏÇºÏ≤≠Î°ú 30 (ÏÑúÏö∏Í¥Ä Í∏∞Ï§Ä)',
      city: 'ÏÑúÏö∏',
      country: 'KR',
      website: 'https://www.mmca.go.kr',
      instagram: '@mmcakorea',
      is_active: true,
      description: 'Íµ≠Î¶ΩÌòÑÎåÄÎØ∏Ïà†Í¥Ä Ï†ÑÍ¥Ä ÌÜµÌï© Í≤ÄÏÉâÏö©'
    }
  ];
  
  try {
    const { data, error } = await supabase
      .from('venues')
      .upsert(venueVariations, { onConflict: 'name' });
    
    if (error) {
      console.error('‚ùå Error adding venue variations:', error);
      return;
    }
    
    console.log('‚úÖ Added venue name variations');
    
    // ÌòÑÏû¨ venues ÌôïÏù∏
    const { data: venues, error: selectError } = await supabase
      .from('venues')
      .select('name, name_en, city')
      .order('name');
    
    if (!selectError) {
      console.log('\nüìã Current venues:');
      venues.forEach(venue => {
        console.log(`  ${venue.name} (${venue.city})`);
      });
    }
    
  } catch (error) {
    console.error('‚ùå Failed to fix venue names:', error);
  }
}

fixVenueNames();