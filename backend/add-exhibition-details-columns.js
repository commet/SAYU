#!/usr/bin/env node
require('dotenv').config();
const { Pool } = require('pg');

const pool = new Pool({
  connectionString: process.env.DATABASE_URL,
  ssl: process.env.NODE_ENV === 'production' ? { rejectUnauthorized: false } : false
});

async function addExhibitionDetailsColumns() {
  console.log('üîß exhibitions ÌÖåÏù¥Î∏îÏóê ÏÉÅÏÑ∏ Ï†ïÎ≥¥ Ïª¨ÎüºÎì§ Ï∂îÍ∞Ä\n');
  
  const client = await pool.connect();
  
  try {
    // Ï∂îÍ∞ÄÌï† Ïª¨ÎüºÎì§ Î™©Î°ù
    const newColumns = [
      { name: 'venue_address', type: 'TEXT' },
      { name: 'phone_number', type: 'VARCHAR(50)' },
      { name: 'admission_fee', type: 'TEXT' },
      { name: 'operating_hours', type: 'TEXT' }
    ];
    
    for (const column of newColumns) {
      // Ïª¨ÎüºÏù¥ Ïù¥ÎØ∏ ÏûàÎäîÏßÄ ÌôïÏù∏
      const columnCheck = await client.query(`
        SELECT column_name 
        FROM information_schema.columns 
        WHERE table_name = 'exhibitions' AND column_name = $1
      `, [column.name]);
      
      if (columnCheck.rows.length > 0) {
        console.log(`‚ÑπÔ∏è  ${column.name} Ïª¨ÎüºÏù¥ Ïù¥ÎØ∏ Ï°¥Ïû¨Ìï©ÎãàÎã§.`);
        continue;
      }
      
      // Ïª¨Îüº Ï∂îÍ∞Ä
      await client.query(`
        ALTER TABLE exhibitions 
        ADD COLUMN ${column.name} ${column.type}
      `);
      
      console.log(`‚úÖ ${column.name} Ïª¨ÎüºÏù¥ ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Ï∂îÍ∞ÄÎêòÏóàÏäµÎãàÎã§.`);
    }
    
    // ÌÖåÏù¥Î∏î Íµ¨Ï°∞ ÌôïÏù∏ (ÏÉàÎ°ú Ï∂îÍ∞ÄÎêú Ïª¨ÎüºÎì§Îßå)
    const newColumnsCheck = await client.query(`
      SELECT column_name, data_type, is_nullable 
      FROM information_schema.columns 
      WHERE table_name = 'exhibitions' 
      AND column_name IN ('venue_address', 'phone_number', 'admission_fee', 'operating_hours')
    `);
    
    console.log('\nüìã ÏÉàÎ°ú Ï∂îÍ∞ÄÎêú Ïª¨ÎüºÎì§:');
    console.log('=' .repeat(60));
    newColumnsCheck.rows.forEach(col => {
      console.log(`   ${col.column_name}: ${col.data_type} ${col.is_nullable === 'YES' ? '(nullable)' : '(not null)'}`);
    });
    console.log('=' .repeat(60));
    
  } catch (error) {
    console.error('‚ùå Ïò§Î•ò:', error.message);
  } finally {
    client.release();
  }
}

// Ïã§Ìñâ
async function main() {
  await addExhibitionDetailsColumns();
  await pool.end();
}

if (require.main === module) {
  main();
}

module.exports = { addExhibitionDetailsColumns };