require('dotenv').config();
const { Pool } = require('pg');

// Test database connection
const pool = new Pool({
  connectionString: process.env.DATABASE_URL,
  ssl: {
    rejectUnauthorized: false
  }
});

async function testConnection() {
  try {
    console.log('üîç ÌôòÍ≤Ω Î≥ÄÏàò ÌôïÏù∏:');
    console.log('DATABASE_URL:', process.env.DATABASE_URL ? '‚úÖ ÏÑ§Ï†ïÎê®' : '‚ùå ÏóÜÏùå');
    console.log('REPLICATE_API_TOKEN:', process.env.REPLICATE_API_TOKEN ? '‚úÖ ÏÑ§Ï†ïÎê®' : '‚ùå ÏóÜÏùå');
    console.log('\nüîç DATABASE_URL ÎÇ¥Ïö©:');
    console.log(process.env.DATABASE_URL);
    
    console.log('\nüîÑ Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Ïó∞Í≤∞ ÌÖåÏä§Ìä∏...');
    const result = await pool.query('SELECT NOW()');
    console.log('‚úÖ Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Ïó∞Í≤∞ ÏÑ±Í≥µ!');
    
    // Check if tables exist
    const tables = await pool.query(`
      SELECT table_name 
      FROM information_schema.tables 
      WHERE table_schema = 'public' 
      AND table_name IN ('art_profiles', 'art_profile_likes', 'users')
    `);
    
    console.log('\nüìä ÌôïÏù∏Îêú ÌÖåÏù¥Î∏î:');
    if (tables.rows.length === 0) {
      console.log('  (ÌÖåÏù¥Î∏îÏù¥ ÏóÜÏäµÎãàÎã§)');
    } else {
      tables.rows.forEach(row => {
        console.log('  - ' + row.table_name);
      });
    }
    
    // Î™®Îì† ÌÖåÏù¥Î∏î ÌôïÏù∏
    const allTables = await pool.query(`
      SELECT table_name 
      FROM information_schema.tables 
      WHERE table_schema = 'public'
      ORDER BY table_name
    `);
    
    console.log('\nüìä Ï†ÑÏ≤¥ ÌÖåÏù¥Î∏î Î™©Î°ù:');
    allTables.rows.forEach(row => {
      console.log('  - ' + row.table_name);
    });
    
  } catch (error) {
    console.error('‚ùå Ïò§Î•ò:', error.message);
  } finally {
    await pool.end();
  }
}

testConnection();