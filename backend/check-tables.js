require('dotenv').config();
const { Pool } = require('pg');

async function checkTables() {
  console.log('üîç Railway Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ ÌÖåÏù¥Î∏î ÌôïÏù∏...\n');
  
  const pool = new Pool({
    connectionString: process.env.DATABASE_URL,
    ssl: { rejectUnauthorized: false }
  });

  try {
    // Î™®Îì† ÌÖåÏù¥Î∏î Ï°∞Ìöå
    const tablesResult = await pool.query(`
      SELECT table_name 
      FROM information_schema.tables 
      WHERE table_schema = 'public' 
      AND table_type = 'BASE TABLE'
      ORDER BY table_name;
    `);
    
    console.log('üìã ÌòÑÏû¨ Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ ÌÖåÏù¥Î∏î:');
    tablesResult.rows.forEach(row => {
      console.log(`   - ${row.table_name}`);
    });
    
    // users ÌÖåÏù¥Î∏î Ïª¨Îüº ÌôïÏù∏
    const usersColumns = await pool.query(`
      SELECT column_name, data_type 
      FROM information_schema.columns 
      WHERE table_name = 'users'
      ORDER BY ordinal_position;
    `);
    
    if (usersColumns.rows.length > 0) {
      console.log('\nüìä users ÌÖåÏù¥Î∏î Íµ¨Ï°∞:');
      usersColumns.rows.forEach(col => {
        console.log(`   - ${col.column_name}: ${col.data_type}`);
      });
    }
    
    // profiles ÎòêÎäî Ïú†ÏÇ¨Ìïú ÌÖåÏù¥Î∏î Ï∞æÍ∏∞
    const profileTables = tablesResult.rows.filter(row => 
      row.table_name.includes('profile') || 
      row.table_name.includes('user')
    );
    
    if (profileTables.length > 0) {
      console.log('\nüîé ÌîÑÎ°úÌïÑ Í¥ÄÎ†® ÌÖåÏù¥Î∏î:');
      profileTables.forEach(row => {
        console.log(`   - ${row.table_name}`);
      });
    }
    
  } catch (error) {
    console.error('‚ùå Ïò§Î•ò:', error.message);
  } finally {
    await pool.end();
  }
}

checkTables();