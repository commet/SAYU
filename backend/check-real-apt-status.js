const { Pool } = require('pg');
require('dotenv').config();

const pool = new Pool({
  connectionString: process.env.DATABASE_URL,
  ssl: { rejectUnauthorized: false }
});

async function checkRealAPTStatus() {
  try {
    console.log('üìä Ïã§Ï†ú APT Îß§Ìïë ÌòÑÌô© ÌôïÏù∏\n');
    
    // Ïã§Ï†ú APT ÌîÑÎ°úÌïÑ Í∞úÏàò
    const stats = await pool.query(`
      SELECT 
        COUNT(*) as total_artists,
        COUNT(apt_profile) as with_apt_profile
      FROM artists
    `);
    
    // 16Í∞ÄÏßÄ ÎèôÎ¨º Ïú†ÌòïÎ≥Ñ Î∂ÑÌè¨ ÌôïÏù∏
    const animalDistribution = await pool.query(`
      SELECT 
        apt_profile->'primary_types'->0->>'type' as apt_type,
        COUNT(*) as count,
        ROUND((COUNT(*) * 100.0 / (SELECT COUNT(*) FROM artists WHERE apt_profile IS NOT NULL)), 1) as percentage
      FROM artists 
      WHERE apt_profile IS NOT NULL 
        AND apt_profile->'primary_types'->0->>'type' IS NOT NULL
      GROUP BY apt_profile->'primary_types'->0->>'type'
      ORDER BY count DESC
    `);
    
    // LAREMFC 4Í∏ÄÏûê ÏΩîÎìúÎ≥Ñ Î∂ÑÌè¨
    const laremfcDistribution = await pool.query(`
      SELECT 
        apt_profile->'primary_types'->0->>'type' as apt_code,
        COUNT(*) as count
      FROM artists 
      WHERE apt_profile IS NOT NULL
      GROUP BY apt_profile->'primary_types'->0->>'type'
      ORDER BY count DESC
    `);
    
    // Ïú†Î™Ö ÏïÑÌã∞Ïä§Ìä∏Îì§Ïùò Îß§Ìïë ÏÉÅÌÉú
    const famousArtists = await pool.query(`
      SELECT name, apt_profile->'primary_types'->0->>'type' as apt_type, follow_count, name_ko
      FROM artists 
      WHERE apt_profile IS NOT NULL
        AND (follow_count > 10 OR 
             name ILIKE '%van gogh%' OR name ILIKE '%picasso%' OR name ILIKE '%monet%' OR
             name ILIKE '%raphael%' OR name ILIKE '%leonardo%' OR name ILIKE '%michelangelo%')
      ORDER BY follow_count DESC NULLS LAST
    `);
    
    // ÏµúÍ∑º Îß§ÌïëÎêú ÏïÑÌã∞Ïä§Ìä∏Îì§
    const recent = await pool.query(`
      SELECT name, apt_profile->'primary_types'->0->>'type' as apt_type, updated_at
      FROM artists 
      WHERE apt_profile IS NOT NULL
      ORDER BY updated_at DESC
      LIMIT 10
    `);
    
    const summary = stats.rows[0];
    console.log('üéØ Ï†ÑÏ≤¥ ÌòÑÌô©:');
    console.log(`  Ï¥ù ÏïÑÌã∞Ïä§Ìä∏: ${summary.total_artists}Î™Ö`);
    console.log(`  APT ÌîÑÎ°úÌïÑ Î≥¥Ïú†: ${summary.with_apt_profile}Î™Ö`);
    console.log(`  ÏßÑÌñâÎ•†: ${((summary.with_apt_profile / summary.total_artists) * 100).toFixed(2)}%`);
    
    console.log('\nüî§ LAREMFC ÏΩîÎìúÎ≥Ñ Î∂ÑÌè¨:');
    if (laremfcDistribution.rows.length > 0) {
      laremfcDistribution.rows.forEach(row => {
        console.log(`  ${row.apt_code}: ${row.count}Î™Ö`);
      });
    } else {
      console.log('  Î∂ÑÌè¨ Îç∞Ïù¥ÌÑ∞ ÏóÜÏùå');
    }
    
    console.log('\nüêæ ÎèôÎ¨º Ïú†Ìòï Î≥ÄÌôò ÌïÑÏöî Ïó¨Î∂Ä:');
    console.log('ÌòÑÏû¨Îäî LAREMFC 4Í∏ÄÏûê ÏΩîÎìúÎ°ú Ï†ÄÏû•Îê® (Ïòà: LAEF, SRMC)');
    console.log('16Í∞ÄÏßÄ ÎèôÎ¨º Ïú†ÌòïÏúºÎ°ú Î≥ÄÌôò Î°úÏßÅ ÌïÑÏöî');
    
    console.log('\n‚≠ê Ïú†Î™Ö ÏïÑÌã∞Ïä§Ìä∏ Îß§Ìïë ÏÉÅÌÉú:');
    if (famousArtists.rows.length > 0) {
      famousArtists.rows.forEach(artist => {
        console.log(`  ${artist.name}: ${artist.apt_type} (ÌåîÎ°úÏõå: ${artist.follow_count || 0})`);
      });
    } else {
      console.log('  Ïú†Î™Ö ÏïÑÌã∞Ïä§Ìä∏ Îß§Ìïë ÏóÜÏùå - Ïö∞ÏÑ†ÏàúÏúÑ Ï°∞Ï†ï ÌïÑÏöî');
    }
    
    console.log('\nüïê ÏµúÍ∑º Îß§ÌïëÎêú ÏïÑÌã∞Ïä§Ìä∏:');
    recent.rows.forEach(artist => {
      console.log(`  ${artist.name}: ${artist.apt_type}`);
    });
    
  } catch (error) {
    console.error('‚ùå Ïò§Î•ò:', error.message);
  } finally {
    await pool.end();
  }
}

checkRealAPTStatus();